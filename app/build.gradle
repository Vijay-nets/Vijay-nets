plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
}

apply from: 'versions.gradle'
apply from: 'package.gradle'

android {
    compileSdk android_compile_sdk_version

    defaultConfig {
        applicationId "com.example.piashop"
        minSdk 21
        targetSdk android_target_sdk_version
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField 'String', 'APPLICATION_VERSION_INFO_HASH', '"' + applicationVersionInfoHash + '"'
        buildConfigField "String", "APPLICATION_VERSION_INFO_ID", '"' + applicationVersionInfoId + '"'
        buildConfigField "String", "APPLICATION_VERSION_INFO_BRANCH", '"' + applicationVersionInfoBranch + '"'
        buildConfigField "String", "MERCHANT_ID_PROD", MERCHANT_ID_PROD
        buildConfigField "String", "MERCHANT_BACKEND_URL_PROD", MERCHANT_BACKEND_URL_PROD
        buildConfigField "String", "MERCHANT_ID_TEST", MERCHANT_ID_TEST
        buildConfigField "String", "MERCHANT_BACKEND_URL_TEST", MERCHANT_BACKEND_URL_TEST
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "../../../../../output/pia-" +
                    System.getProperty("buildType") + "-" +
                    System.getProperty("buildVersion") + "-" +
                    applicationVersionInfoHash + ".apk"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(":piasdk") // android lib
    implementation project(":networking-library") // android lib
    implementation project(":card-scanner") // android lib

    implementation "androidx.core:core-ktx:$core_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_runtime_ktx_version"
    implementation "androidx.activity:activity-compose:$activity_compose_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$android_material_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    //region - retrofit2 TODO: How can we share retrofit from networking module?
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-scalars:$retrofit_version")
    //endregion

    // Compose Navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_reflect_version"
}